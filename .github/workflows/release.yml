name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Derive owner/repo (lowercase)
        id: names
        run: |
          echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
          REPO="${GITHUB_REPOSITORY#*/}"
          echo "REPO_LC=${REPO,,}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}-api:${{ env.TAG }}
            ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}-api:latest
      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}-frontend:${{ env.TAG }}
            ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}-frontend:latest

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install and build
        run: |
          npm install
          npm run build
      - name: Archive dist
        run: |
          cd dist
          zip -r ../frontend-dist.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/frontend-dist.zip

  create-release:
    needs: [build-frontend, build-and-push-images]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/frontend-dist.zip
          generate_release_notes: true
